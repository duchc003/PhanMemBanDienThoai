/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import service.impl.hoaDonViewModelServicesImplHUY;
import util.MsgBox;
import viewmodel.hoaDonViewModelHUY;

/**
 *
 * @author ASUS
 */
public class HoaDonView extends javax.swing.JInternalFrame {

    /**
     * Creates new form HoaDonView
     */
    private final hoaDonViewModelServicesImplHUY hoaViewModelServicesImplHUY = new hoaDonViewModelServicesImplHUY();

    public HoaDonView() {
        initComponents();
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        loadtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_timKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        cbo_HTGH = new javax.swing.JComboBox<>();
        cbo_trangThai = new javax.swing.JComboBox<>();
        cbo_HTTT = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tìm Kiếm");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        txt_timKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_timKiemCaretUpdate(evt);
            }
        });
        jPanel1.add(txt_timKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 940, -1));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MaHD", "Ten NhanVien", "Tên Khách Hàng", "Số lượng", "Tổng Tiền", "tên  HTTT", "Tên HTGH", "Trạng Thái"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 330, 1270, 460));

        cbo_HTGH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tại Quầy", "Khác" }));
        cbo_HTGH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_HTGHItemStateChanged(evt);
            }
        });
        jPanel1.add(cbo_HTGH, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 150, 180, -1));

        cbo_trangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã Thanh Toán", "Đã Hủy", "Chờ Thanh Toán", "Đang Giao Hàng", "Giao Hàng Thành Công" }));
        cbo_trangThai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_trangThaiItemStateChanged(evt);
            }
        });
        jPanel1.add(cbo_trangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, -1));

        cbo_HTTT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền Mặt", "Quẹt Thẻ", "Chuyển Khoản", "Quét Mã" }));
        cbo_HTTT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_HTTTItemStateChanged(evt);
            }
        });
        cbo_HTTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_HTTTActionPerformed(evt);
            }
        });
        jPanel1.add(cbo_HTTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 180, -1));

        jButton1.setBackground(new java.awt.Color(51, 255, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/export.png"))); // NOI18N
        jButton1.setText("Xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 260, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1362, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_timKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_timKiemCaretUpdate
        if (txt_timKiem.getText().equalsIgnoreCase("")) {
            return;
        }
        String maHD = txt_timKiem.getText();
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemHoaDonViewModelHUY(maHD);
        int i = 1;
        for (hoaDonViewModelHUY hd : list) {

            model.addRow(new Object[]{
                i++,
                hd.getMaHD(),
                hd.getHoVaTen(),
                hd.getTenKhachHang(),
                hd.getSoLuong(),
                hd.getTongTien(),
                hd.getTenHTTT(),
                hd.getTenHTGH(),
                hd.getTrangThai()

            });
        }
    }//GEN-LAST:event_txt_timKiemCaretUpdate

    private void cbo_trangThaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_trangThaiItemStateChanged
        // TODO add your handling code here:
         if (cbo_trangThai.getSelectedIndex() == 0) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
        if (cbo_trangThai.getSelectedIndex() == 1) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
               
            }
             return;
        }
        if (cbo_trangThai.getSelectedIndex() == 2) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
        if (cbo_trangThai.getSelectedIndex() == 3) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
        if (cbo_trangThai.getSelectedIndex() == 4) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }


    }//GEN-LAST:event_cbo_trangThaiItemStateChanged

    private void cbo_HTTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_HTTTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbo_HTTTActionPerformed

    private void cbo_HTTTItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_HTTTItemStateChanged
        if (cbo_HTTT.getSelectedIndex() == 0) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i ++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
          if (cbo_HTTT.getSelectedIndex() == 1) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i ++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
            if (cbo_HTTT.getSelectedIndex() == 2) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i ++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
              if (cbo_HTTT.getSelectedIndex() == 3) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i = 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i ++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
        
      
    }//GEN-LAST:event_cbo_HTTTItemStateChanged

    private void cbo_HTGHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_HTGHItemStateChanged
        // TODO add your handling code here:
        if (cbo_HTGH.getSelectedIndex() == 0) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i= 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }
        
                if (cbo_HTGH.getSelectedIndex() == 0) {
            String tranThai = cbo_trangThai.getSelectedItem().toString();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.setRowCount(0);
            List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.timKiemCombobox(tranThai);
            int i= 1;
            for (hoaDonViewModelHUY hd : list) {
                model.addRow(new Object[]{
                    i++,
                    hd.getMaHD(),
                    hd.getHoVaTen(),
                    hd.getTenKhachHang(),
                    hd.getSoLuong(),
                    hd.getTongTien(),
                    hd.getTenHTTT(),
                    hd.getTenHTGH(),
                    hd.getTrangThai()

                });
                
            }
            return;
        }

    }//GEN-LAST:event_cbo_HTGHItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        xuatExcel();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbo_HTGH;
    private javax.swing.JComboBox<String> cbo_HTTT;
    private javax.swing.JComboBox<String> cbo_trangThai;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txt_timKiem;
    // End of variables declaration//GEN-END:variables

    private void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }
    }

    private void xuatExcel() {
        DefaultTableModel model = (DefaultTableModel) this.tblHoaDon.getModel();
        JFileChooser jfc = new JFileChooser("documents");
        int result = jfc.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File newFile = jfc.getSelectedFile();
                newFile = new File(newFile.toString() + ".xlsx");
                XSSFWorkbook xwb = new XSSFWorkbook();
                XSSFSheet Diemsheep = xwb.createSheet("Thống kê Hóa Đơn");
                XSSFRow row = Diemsheep.createRow((short) 0);
                XSSFCell h;
                for (int i = 0; i < model.getColumnCount(); i++) {
                    h = row.createCell((short) i);
                    h.setCellValue(model.getColumnName(i));
                }

                XSSFRow row1;
                XSSFCell a1;
                for (int i = 0; i < model.getRowCount(); i++) {
                    row1 = Diemsheep.createRow((short) i + 1);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        a1 = row1.createCell((short) j);
                        a1.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                FileOutputStream file = new FileOutputStream(newFile.getAbsoluteFile().getPath());
                xwb.write(file);
                xwb.close();
                file.close();
                MsgBox.alert(this, "Xuất tệp thành công");
                openFile(newFile.toString());
            } catch (Exception e) {
                MsgBox.alert(this, "Xuất tệp thất bại");
            }
        }
    }

    private void loadtable() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        List<hoaDonViewModelHUY> list = hoaViewModelServicesImplHUY.getAllhoaDonViewModelHUY();
        int i = 1;
        for (hoaDonViewModelHUY hd : list) {
            model.addRow(new Object[]{
                i++,
                hd.getMaHD(),
                hd.getHoVaTen(),
                hd.getTenKhachHang(),
                hd.getSoLuong(),
                hd.getTongTien(),
                hd.getTenHTTT(),
                hd.getTenHTGH(),
                hd.getTrangThai() == 1 ? "Đã Thanh Toán"
                : hd.getTrangThai() == 2 ? "Đã Hủy"
                : hd.getTrangThai() == 3 ? "Giao Hàng Thành Công"
                : hd.getTrangThai() == 4 ? "Đang Giao Hàng" : "Giao Hàng Thất Bại"

            });
        }

    }
}
