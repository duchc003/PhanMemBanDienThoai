/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Imei;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import service.ImeiService;
import service.impl.ImeiServiceImpl;
import util.MsgBox;

/**
 *
 * @author ASUS
 */
public class ImeiForm extends javax.swing.JFrame {

    private DefaultTableModel dtm = new DefaultTableModel();
    boolean isNewProduct = false;
    public static int mactsp;
    static List<String> listImei = new ArrayList<>();
    private ImeiServiceImpl impl = new ImeiServiceImpl();

    public ImeiForm() {
        initComponents();
        setLocationRelativeTo(null);
        tbImei.setModel(dtm);
        dtm.setColumnIdentifiers(new Object[]{"Mã Imei"});
        txtSoLuong.setText("Số lượng : 0");
        DefaultTableModel model = (DefaultTableModel) tbImei.getModel();
        List<String> list = impl.getList();
        if (list == null) {
            return;
        }
        for (String string : list) {
            Object[] data = new Object[]{
                string
            };
            model.addRow(data);
        }
        int row = model.getRowCount();

        txtSoLuong.setText("Số lượng : " + String.valueOf(row));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbImei = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtTenImei = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        tbImei.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbImei);

        btnThem.setBackground(new java.awt.Color(0, 255, 51));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 255, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/share.png"))); // NOI18N
        jButton3.setText("Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtSoLuong.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(txtSoLuong)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTenImei, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(txtTenImei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSoLuong))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String imei = txtTenImei.getText();
        String checkSo = "^[0-9]*$";
        if (imei.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Imei không được để trống !");
            return;
        }
        if (!imei.matches(checkSo)) {
            JOptionPane.showMessageDialog(this, "Imei phải là chuỗi toàn số !");
            return;
        }
        if (imei.length() != 15) {
            JOptionPane.showMessageDialog(this, "Imei phải 15 kí tự !");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbImei.getModel();
        int index = tbImei.getRowCount();
        for (int i = 0; i < index; i++) {
            if (imei.equals(model.getValueAt(i, 0))) {
                JOptionPane.showMessageDialog(this, "Imei đã có trong danh sách !");
                return;
            }
        }
        List<String> list = new ArrayList();
        list.removeAll(list);

        Object[] data = new Object[]{
            imei
        };
        model.addRow(data);
        loadSoLuong();
        for (int i = 0; i < tbImei.getRowCount(); i++) {
            list.add(tbImei.getValueAt(i, 0).toString());
        }

        impl.setList(list);
        loadCbbImei();
        loadTxtSoLuong();
    }//GEN-LAST:event_btnThemActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String checkSo = "^[0-9]*$";
        File exelFile;
        FileInputStream exelFIS = null;
        BufferedInputStream exelBIS = null;
        XSSFWorkbook exelJableImport = null;
        String pach = "D:\\PRO1041";
        JFileChooser fileChooser = new JFileChooser(pach);
        int index = fileChooser.showOpenDialog(null);
        if (index == JFileChooser.CANCEL_OPTION) {
            return;
        }
        if (index == JFileChooser.APPROVE_OPTION) {
            try {
                exelFile = fileChooser.getSelectedFile();
                String fileType = fileChooser.getTypeDescription(exelFile);
                if (!fileType.equals("Microsoft Excel Worksheet")) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn file Microsoft Excel Worksheet !");
                    return;
                }
                exelFIS = new FileInputStream(exelFile);
                exelBIS = new BufferedInputStream(exelFIS);
                exelJableImport = new XSSFWorkbook(exelBIS);
                XSSFSheet exelSheet = exelJableImport.getSheetAt(0);
                DefaultTableModel model = (DefaultTableModel) tbImei.getModel();
                List<String> list = new ArrayList();
                for (int i = 0; i <= exelSheet.getLastRowNum(); i++) {
                    XSSFRow exelRow = exelSheet.getRow(i);
                    if (exelRow == null) {
                        JOptionPane.showMessageDialog(this, "File bạn vừa thêm không chứa Imei nào. Vui lòng kiểm tra lại !");
                        return;
                    }
                    XSSFCell cell = exelRow.getCell(0);

                    int row = tbImei.getRowCount();
                    for (int k = 0; k < row; k++) {
                        if (cell.getStringCellValue().equals(tbImei.getValueAt(k, 0).toString())) {
                            JOptionPane.showMessageDialog(this, "File bạn vừa thêm chứa Imei đã tồn tại trong list. Vui lòng kiểm tra lại !");
                            return;
                        }
                    }

                    if (!cell.getStringCellValue().matches(checkSo)) {
                        JOptionPane.showMessageDialog(this, "File bạn vừa thêm có chứa Imei không phải là một chuỗi toàn số !");
                        return;
                    }
                    if (cell.getStringCellValue().length() != 15) {
                        JOptionPane.showMessageDialog(this, "File bạn vừa thêm có chứa Imei không không là độ dài 15 kí tự !");
                        return;
                    }
//                    List<ChiTietSP> list1 = chiTietSPServices.getImei();
//                    for (ChiTietSP chiTietSP : list1) {
//                        for (int j = 0; j < row; j++) {
//                            if (chiTietSP.getMaImei().equals(cell.getStringCellValue())) {
//                                JOptionPane.showMessageDialog(this, "List Imei chứa Imei đã tồn tại trên hệ thống !");
//                                return;
//                            }
//                        }
//                    }
                    Object[] data = new Object[]{
                        cell
                    };
                    model.addRow(data);

                    list.removeAll(list);
                    for (int j = 0; j <= row; j++) {

                        list.add(tbImei.getValueAt(j, 0).toString());

                    }
                    impl.setList(list);

                    loadSoLuong();
                    loadCbbImei();
                    loadTxtSoLuong();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ImeiForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ImeiForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImeiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImeiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImeiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImeiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImeiForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbImei;
    private javax.swing.JLabel txtSoLuong;
    private javax.swing.JTextField txtTenImei;
    // End of variables declaration//GEN-END:variables

    public void loadSoLuong() {
        int soLuong = tbImei.getRowCount();
        txtSoLuong.setText("Số lượng : " + String.valueOf(soLuong));
    }

    public void loadCbbImei() {
        List<String> items = impl.getList();
        SanPhamView.cbbImei(items);
    }

    public void loadTxtSoLuong() {
        List<String> list = impl.getList();
        SanPhamView.txtSoLuong(String.valueOf(list.size()));

    }
}
